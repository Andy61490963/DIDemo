@using ClassLibrary
@model FormSubmissionViewModel

<form asp-action="SubmitForm" method="post" id="dynamic-form">
    <input type="hidden" name="FormName" value="@Model.FormName" />

    <div class="grid grid-cols-12 gap-4">
        @foreach (var field in Model.Fields)
        {
            if (!field.IS_VISIBLE) { continue; }

            var spanClass = $"col-span-{field.COLUMN_SPAN}";
            <div class="@spanClass">
                @if (field.IS_SECTION_START)
                {
                    <div class="font-bold text-lg border-b pb-2 mb-2 mt-4">@field.Label</div>
                }

                <label class="block text-sm font-medium text-gray-700">@field.Label</label>

                @switch ((FormControlType)field.CONTROL_TYPE)
                {
                    case FormControlType.Text:
                        <input name="Fields[@field.FieldConfigId]" value="@field.UserValue"
                               placeholder="@field.Placeholder"
                               class="mt-1 block w-full rounded border-gray-300"
                               @(field.IS_EDITABLE ? "" : "readonly") />
                        break;

                    case FormControlType.Textarea:
                        <textarea name="Fields[@field.FieldConfigId]"
                                  placeholder="@field.Placeholder"
                                  class="mt-1 block w-full rounded border-gray-300"
                                  @(field.IS_EDITABLE ? "" : "readonly")>@field.UserValue</textarea>
                        break;

                    case FormControlType.Dropdown:
                        <select name="Fields[@field.FieldConfigId]" class="mt-1 block w-full rounded border-gray-300"
                                @(field.IS_EDITABLE ? "" : "disabled")>
                            <option value="">-- 請選擇 --</option>
                            @foreach (var opt in field.OptionList ?? new())
                            {
                                <option value="">
                                    
                                </option>
                            }
                        </select>
                        break;

                    case FormControlType.Checkbox:
                        <input type="checkbox" name="Fields[@field.FieldConfigId]" value="true"
                               @(field.UserValue == "true" ? "checked" : "")
                               @(field.IS_EDITABLE ? "" : "disabled") />
                        break;

                    default:
                        <input name="Fields[@field.FieldConfigId]" value="@field.UserValue"
                               placeholder="@field.Placeholder"
                               class="mt-1 block w-full rounded border-gray-300"
                               @(field.IS_EDITABLE ? "" : "readonly") />
                        break;
                }

                @if (!string.IsNullOrEmpty(field.HelpText))
                {
                    <p class="text-xs text-gray-500 mt-1">@field.HelpText</p>
                }
            </div>
        }
    </div>

    <div class="mt-6">
        <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded">
            送出表單
        </button>
    </div>
</form>
