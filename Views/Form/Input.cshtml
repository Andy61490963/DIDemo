@using ClassLibrary
@model FormSubmissionViewModel

<form asp-action="SubmitForm" method="post" id="dynamic-form" class="container mt-4" novalidate >
    <input type="hidden" name="FormId" value="@Model.FormId" />
    <input type="hidden" name="RowId" value="@Model.RowId" />
    <input type="hidden" name="TargetTableToUpsert" value="@Model.TargetTableToUpsert" />

    <div class="row g-4">
        @for (var i = 0; i < Model.Fields.Count; i++)
        {
            var field        = Model.Fields[i];
            if (!field.IS_EDITABLE) { continue; }

            var colSize      = "col-md-4";
            var isRequired   = field.IS_REQUIRED;
            // var maxLength    = field.ValidationRules.FirstOrDefault(r => r.VALIDATION_TYPE == ValidationType.Max)?.VALIDATION_VALUE;
            var controlType  = field.CONTROL_TYPE;
            var bindName     = $"InputFields[{i}].Value";
            
            var regexRules = field.ValidationRules.Where(r => r.VALIDATION_TYPE == ValidationType.Regex).ToList();

            /*── 多條 Regex 合併 ──*/
            string regexAttr = string.Empty;
            if (regexRules.Any())
            {
                // OR 關係：只要滿足其中一條即可
                // var mergedPattern = string.Join("|", regexRules.Select(r => r.VALIDATION_VALUE));
                
                var mergedPattern = string.Concat(regexRules.Select(r => $"(?={r.VALIDATION_VALUE})")) + ".*";
                
                var mergedZhMsg = string.Join("&#10;", regexRules.Select(r => r.MESSAGE_ZH));
                var mergedEnMsg = string.Join("&#10;", regexRules.Select(r => r.MESSAGE_EN));

                regexAttr = $"pattern=\"{mergedPattern}\" " +
                            $"title=\"{mergedEnMsg}\" " +
                            $"data-val=\"true\" " +
                            $"data-val-regex=\"{mergedZhMsg}\" " +
                            $"data-val-regex-pattern=\"{mergedPattern}\" ";
            }
            
            <div class="@colSize">
                <input type="hidden" name="InputFields[@i].FieldConfigId" value="@field.FieldConfigId" />
                <input type="hidden" name="InputFields[@i].Column"        value="@field.Column" />
                <input type="hidden" name="InputFields[@i].SOURCE_TABLE"  value="@field.SOURCE_TABLE" />

                @* ---------- Textarea ---------- *@
                @if (controlType == FormControlType.Textarea)
                {
                    <div class="card shadow-sm mb-4">
                        <div class="card-body py-3 px-4">
                            <div class="row align-items-center">
                                <div class="col-md-4 text-md-end text-muted fw-semibold">
                                    @if (isRequired) { <span class="text-danger">*</span> } @field.Column
                                </div>
                                <div class="col-md-8">
                    <textarea name="@bindName" class="form-control"
                              @(isRequired ? "required" : "")
                              @Html.Raw(regexAttr)>@(field.CurrentValue ?? field.DefaultValue)</textarea>
                    <span class="text-danger validation-msg" data-for="@bindName"></span>
                </div>
            </div>
        </div>
    </div>
}
                @* ---------- Dropdown ---------- *@
                else if (controlType == FormControlType.Dropdown)
                {
                    <div class="card shadow-sm mb-4">
                        <div class="card-body py-3 px-4">
                            <div class="row align-items-center">
                                <div class="col-md-4 text-md-end text-muted fw-semibold">
                                    @if (isRequired) { <span class="text-danger">*</span> } @field.Column
                                </div>
                                <div class="col-md-8">
                    <select name="@bindName"
                            class="form-select dynamic-dropdown"
                            data-id="@field.FieldConfigId"
                            data-usesql="@field.ISUSESQL.ToString().ToLower()"
                            data-sql="@Html.Raw(field.DROPDOWNSQL)"
                            @(isRequired ? "required" : "")>
                        <option value="">-- 請選擇 --</option>
                        @foreach (var opt in field.OptionList ?? new())
                        {
                            var selected = field.CurrentValue is Guid gid && gid == opt.ID;
                            <option value="@opt.ID" selected="@(selected ? "selected" : null)">@opt.OPTION_TEXT</option>
                        }
                    </select>
                    <span class="text-danger validation-msg" data-for="@bindName"></span>
                </div>
            </div>
        </div>
    </div>
}
                @* ---------- Checkbox ---------- *@
                else if (controlType == FormControlType.Checkbox)
                {
                    var isChecked = (field.CurrentValue?.ToString()?.ToLower() == "true");
                    <div class="form-check mt-1">
                    <input type="checkbox" name="@bindName" value="true"
                           class="form-check-input" @(isChecked ? "checked" : "") />
                    <span class="text-danger validation-msg" data-for="@bindName"></span>
                    <label class="form-check-label">啟用</label>
                </div>
            }
                @* ---------- Text / Number ---------- *@
                else
                {
                    <div class="card shadow-sm mb-4">
                        <div class="card-body py-3 px-4">
                            <div class="row align-items-center">
                                <div class="col-md-4 text-md-end text-muted fw-semibold">
                                    @if (isRequired) { <span class="text-danger">*</span> } @field.Column
                                </div>
                                <div class="col-md-8">
                    <input type="text" name="@bindName" class="form-control"
                           value="@(field.CurrentValue)"
                           data-required="@(isRequired.ToString().ToLower())"
                           @(isRequired ? "required" : "")
                           @Html.Raw(regexAttr) />
                    <span class="text-danger validation-msg" data-for="@bindName"></span>
                </div>
            </div>
        </div>
    </div>
}
            </div>
        }
    </div>

    <div class="mt-5 text-center">
        <button type="submit" class="btn btn-primary px-5 py-2 fs-5 shadow-sm">
            <i class="bi bi-send-fill me-2"></i> 送出表單
        </button>
    </div>
</form>

@section Scripts {
    <script src="~/js/Form/form-validation.js"></script>
}
